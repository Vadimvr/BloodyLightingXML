<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\..\Commands\CommandsWindow\CommandsWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <SolidColorBrush x:Key="WindowForeground" Color="LightGray" />
    <SolidColorBrush x:Key="WindowBackground" Color="DarkGray" />
    <SolidColorBrush x:Key="WindowTitleBackground" Color="#400A14" />

    <SolidColorBrush x:Key="ForegroundWindowTitleButton" Color="Black" />
    <SolidColorBrush x:Key="IsMouseOverBackgroundWindowTitleButton" Color="#2B070D" />
    <SolidColorBrush x:Key="IsPressedBackgroundWindowTitleButton" Color="#540D1A" />
    <SolidColorBrush x:Key="ColorButtonClose" Color="Red" />
    <SolidColorBrush x:Key="ColorButtonCloseIsPressed" Color="White" />

    <Geometry x:Key="MinimizeButtonIconGeometry">M0,8 H8 M0,7 H8 M0,6 H8</Geometry>
    <Geometry x:Key="MaximizeIconGeometry">M0,0 H8 V8 H0 V0 M0,1 H8</Geometry>
    <Geometry x:Key="NormalIconGeometry">M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8</Geometry>
    <Geometry x:Key="CloseButtonIconGeometry">M0,0 L8,8 M0,8 L8,0</Geometry>


    <Style x:Key="WindowHeaderButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundWindowTitleButton}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_Border" Background="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background"
                                    Value="{StaticResource IsMouseOverBackgroundWindowTitleButton}" />
                            <Setter TargetName="PART_Border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background"
                                    Value="{StaticResource IsPressedBackgroundWindowTitleButton}" />
                            <Setter TargetName="PART_Border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource ColorButtonCloseIsPressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MainWindowTemplateStyle" TargetType="{x:Type Window}">
        <Grid>
            <!-- В максимальном размере окно раскрывается за границы экрана, что бы это нивелировать устанавливается отступ в 7 -->
            <Grid.Resources>
                <Style x:Key="PART_BorderStyle" TargetType="{x:Type Border}">
                    <Style.Triggers>
                        <DataTrigger
                                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                Value="Maximized">
                            <Setter Property="Margin" Value="7" />
                        </DataTrigger>
                        <DataTrigger
                                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                Value="Normal">
                            <Setter Property="Margin" Value="0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Border Name="PART_Border" Style="{StaticResource PART_BorderStyle}" BorderBrush="Red" BorderThickness="0">
                <!--BorderThickness="{TemplateBinding BorderThickness}">-->

                <Grid x:Name="PART_MainGrid" Margin="0" Background="{TemplateBinding Background}"
                        TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display">
                    <DockPanel>

                        <Grid DockPanel.Dock="Top" Name="PART_TitleBar"
                                Background="{StaticResource WindowTitleBackground}">
                            <!-- Move Window and max <=> normal-->
                            <Grid.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{StaticResource MyMoveWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                                <MouseBinding MouseAction="LeftDoubleClick"
                                        Command="{StaticResource StateNormalMaximizedWindowCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                            </Grid.InputBindings>
                            <DockPanel Height="32">
                                <Image Name="PART_Icon" DockPanel.Dock="Left" Height="20" Width="20" Margin="5" Source="{TemplateBinding Icon}">
                                 
                                 <!-- Open system menu and close app -->
                                    <Image.InputBindings>
                                        <MouseBinding MouseAction="LeftClick"
                                                Command="{StaticResource SnowSystemMiniMenuCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                                        <MouseBinding MouseAction="LeftDoubleClick"
                                                Command="{StaticResource CloseWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                                    </Image.InputBindings>
                                </Image>
                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type Button}"
                                                BasedOn="{StaticResource WindowHeaderButtonsStyle}" />
                                        <Style TargetType="{x:Type Path}">
                                            <Setter Property="StrokeThickness" Value="1" />
                                            <Setter Property="Stroke"
                                                    Value="{Binding Foreground, RelativeSource = {RelativeSource AncestorType=Button} }" />
                                            <Setter Property="Margin" Value="1" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <!--Minimize button -->
                                    <Button Command="{StaticResource  StateMinimizedWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                        <Path Data="{StaticResource MinimizeButtonIconGeometry}" />
                                    </Button >
                                    <Grid>
                                        <!--Style for  Show hide maximize and normal buttons-->
                                        <Grid.Resources>
                                            <Style x:Key="Normal" TargetType="{x:Type Button}"
                                                    BasedOn="{StaticResource WindowHeaderButtonsStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                            Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                                            Value="Maximized">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style x:Key="Maximized" TargetType="{x:Type Button}"
                                                    BasedOn="{StaticResource WindowHeaderButtonsStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                            Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                                            Value="Normal">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Resources>
                                        <!--normal button-->
                                        <Button Style="{StaticResource Normal}"
                                                Command="{StaticResource  StateNormalMaximizedWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            <Path Data="{StaticResource MaximizeIconGeometry}" />
                                        </Button>
                                        <!--maximize button-->
                                        <Button Style="{StaticResource Maximized}"
                                                Command="{StaticResource  StateNormalMaximizedWindowCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            <Path Data="{StaticResource NormalIconGeometry}" />
                                        </Button>
                                    </Grid>
                                    <!--Close button-->
                                    <Button Foreground="{StaticResource ColorButtonClose}"
                                            Command="{StaticResource  CloseWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                        <Path Data="{StaticResource CloseButtonIconGeometry}" />
                                    </Button>
                                </StackPanel>
                                <TextBlock x:Name="PATH_Title" FontSize="{TemplateBinding FontSize}" FontFamily="Segoe UI" Margin="4,0,0,0"
                                        VerticalAlignment="Center" Text="{TemplateBinding Title }" />
                            </DockPanel>
                        </Grid>
                        <!--Content-->
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </DockPanel>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <!--You need to add it to the control to click through the caption <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/> -->
    <WindowChrome x:Key="WindowChrome" UseAeroCaptionButtons="True" ResizeBorderThickness="7" GlassFrameThickness="1"
            CornerRadius="0" NonClientFrameEdges="Bottom" CaptionHeight="1" />

    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <!--<Setter Property="WindowStyle" Value="SingleBorderWindow" />-->
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource WindowForeground}" />
        <Setter Property="Background" Value="{StaticResource WindowBackground}" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template" Value="{StaticResource MainWindowTemplateStyle}" />
        <Setter Property="WindowChrome.WindowChrome" Value="{StaticResource WindowChrome}" />
    </Style>
</ResourceDictionary>