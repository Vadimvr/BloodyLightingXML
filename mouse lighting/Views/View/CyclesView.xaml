<UserControl x:Class="mouse_lighting.Views.View.CyclesView" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:mouse_lighting.Views.View" mc:Ignorable="d"
        DataContext="{Binding CyclesViewModel, Source={StaticResource Locator}}" d:DesignHeight="450" d:DesignWidth="800"
        xmlns:c="clr-namespace:mouse_lighting.Views.Controls" xmlns:con="clr-namespace:mouse_lighting.Resources.Converters">
    <Grid Grid.Row="1">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid>
            <DataGrid Margin="5" ItemsSource="{ Binding Path=Cycles}" Style="{StaticResource LightingCycleViewDataGrid}"
                    SelectedIndex="{Binding IndexLightingCycle, Converter={con:ConverterDebugger}}" VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsContainerVirtualizable="True">
                <DataGrid.Resources>
                    <ResourceDictionary>
                        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="DarkRed" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ResourceDictionary>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Color Wheel Start">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <c:ColorPickerControl ColorString="{Binding ColorWheelStart,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        FontSizeTextBox="16" MaxWidth="135" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Color Wheel Start">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <c:ColorPickerControl ColorString="{Binding ColorWheelEnd,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        FontSizeTextBox="16" MaxWidth="135" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Color Wheel Start">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <c:ColorPickerControl ColorString="{Binding ColorSecondStart,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        FontSizeTextBox="16" MaxWidth="135" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Color Wheel Start">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <c:ColorPickerControl ColorString="{Binding ColorSecondEnd,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                        FontSizeTextBox="16" MaxWidth="135" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Header="Step" Binding="{Binding Step}" Width="40" />
                    <DataGridTextColumn Header="Time" Width="40" Binding="{Binding DisplayTime}" />
                    <DataGridTextColumn Header="Id" Width="40" Binding="{Binding Id}" />
                    <DataGridTextColumn Header="Index" Width="40" Binding="{Binding IndexNumber}" />
                    <DataGridTemplateColumn Header="" Width="30">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <Button CommandParameter="{Binding Path=IndexNumber}" Style="{StaticResource  ButtonInDataGridRowUp}"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.UpCycleCommand}">
                                        <Path Style="{StaticResource ArrowUp}" />
                                    </Button>
                                    <Button CommandParameter="{Binding Path=IndexNumber}" Style="{StaticResource  ButtonInDataGridRowUp}"
                                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DownCycleCommand}">
                                        <Path Style="{StaticResource ArrowDown}" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Delete" Width="80">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button CommandParameter="{Binding Path=IndexNumber}" Style="{StaticResource  ButtonInDataGridRow}"
                                        Content="Delete"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.RemoveCycleCommand}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Save in DB" Style="{StaticResource  Button_1}" Command="{Binding SaveInDBCommand}" />
            <Button Content="Export" Style="{StaticResource  Button_1}" Command="{Binding ExportToXmlLightingFileCommand}" />
            <Button Content="Add" Style="{StaticResource  Button_1}" Command="{Binding AddNewCycleCommand}" />
        </StackPanel>
    </Grid>
</UserControl>
